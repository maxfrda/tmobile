{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Plan = /*#__PURE__*/function () {\n  function Plan(number, data) {\n    var autopay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    _classCallCheck(this, Plan);\n\n    this.number = number;\n    this.data = data;\n    this.autopay = autopay;\n  } // Getter\n\n\n  _createClass(Plan, [{\n    key: \"findRow\",\n    // Method\n    value: function findRow() {\n      return document.getElementById(\"price-\".concat(this.number));\n    }\n  }, {\n    key: \"findAutoRow\",\n    value: function findAutoRow() {\n      return document.getElementById(\"price-\".concat(this.number, \"-autopay\"));\n    }\n  }, {\n    key: \"findButton\",\n    value: function findButton() {\n      return document.getElementById(\"col-\".concat(this.number, \"-btn\"));\n    }\n  }, {\n    key: \"findColumn\",\n    value: function findColumn() {\n      return document.getElementById(\"col-\".concat(this.number));\n    }\n  }, {\n    key: \"findMinus\",\n    value: function findMinus() {\n      return document.getElementById(\"minus-\".concat(this.number));\n    }\n  }, {\n    key: \"calcPrices\",\n    value: function calcPrices() {\n      return this.data;\n    }\n  }, {\n    key: \"row\",\n    get: function get() {\n      return this.findRow();\n    }\n  }, {\n    key: \"autoRow\",\n    get: function get() {\n      return this.findAutoRow();\n    }\n  }, {\n    key: \"button\",\n    get: function get() {\n      return this.findButton();\n    }\n  }, {\n    key: \"column\",\n    get: function get() {\n      return this.findColumn();\n    }\n  }, {\n    key: \"prices\",\n    get: function get() {\n      return this.calcPrices();\n    }\n  }, {\n    key: \"minus\",\n    get: function get() {\n      return this.findMinus();\n    }\n  }]);\n\n  return Plan;\n}();\n\nexport default Plan;","map":{"version":3,"sources":["/home/max/code/maxfrda/tmobile/app/javascript/packs/classes.js"],"names":["Plan","number","data","autopay","document","getElementById","findRow","findAutoRow","findButton","findColumn","calcPrices","findMinus"],"mappings":";;;;;;IAAMA,I;AACJ,gBAAYC,MAAZ,EAAoBC,IAApB,EAA0C;AAAA,QAAhBC,OAAgB,uEAAN,IAAM;;AAAA;;AACxC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACD,G,CACD;;;;;AAyBA;8BAEU;AACR,aAAOC,QAAQ,CAACC,cAAT,iBAAiC,KAAKJ,MAAtC,EAAP;AACD;;;kCAEa;AACZ,aAAOG,QAAQ,CAACC,cAAT,iBAAiC,KAAKJ,MAAtC,cAAP;AACD;;;iCAEY;AACX,aAAOG,QAAQ,CAACC,cAAT,eAA+B,KAAKJ,MAApC,UAAP;AACD;;;iCAEY;AACX,aAAOG,QAAQ,CAACC,cAAT,eAA+B,KAAKJ,MAApC,EAAP;AACD;;;gCAEW;AACV,aAAOG,QAAQ,CAACC,cAAT,iBAAiC,KAAKJ,MAAtC,EAAP;AACD;;;iCAEY;AACX,aAAO,KAAKC,IAAZ;AACD;;;wBA/CS;AACR,aAAO,KAAKI,OAAL,EAAP;AACD;;;wBAEa;AACZ,aAAO,KAAKC,WAAL,EAAP;AACD;;;wBAEY;AACX,aAAO,KAAKC,UAAL,EAAP;AACD;;;wBAEY;AACX,aAAO,KAAKC,UAAL,EAAP;AACD;;;wBAEY;AACX,aAAO,KAAKC,UAAL,EAAP;AACD;;;wBAEW;AACV,aAAO,KAAKC,SAAL,EAAP;AACD;;;;;;AA4BH,eAAeX,IAAf","sourcesContent":["class Plan {\n  constructor(number, data, autopay = true) {\n    this.number = number;\n    this.data = data;\n    this.autopay = autopay;\n  }\n  // Getter\n\n  get row() {\n    return this.findRow();\n  }\n\n  get autoRow() {\n    return this.findAutoRow();\n  }\n\n  get button() {\n    return this.findButton();\n  }\n\n  get column() {\n    return this.findColumn();\n  }\n\n  get prices() {\n    return this.calcPrices();\n  }\n\n  get minus() {\n    return this.findMinus();\n  }\n  // Method\n\n  findRow() {\n    return document.getElementById(`price-${this.number}`);\n  }\n\n  findAutoRow() {\n    return document.getElementById(`price-${this.number}-autopay`);\n  }\n\n  findButton() {\n    return document.getElementById(`col-${this.number}-btn`);\n  }\n\n  findColumn() {\n    return document.getElementById(`col-${this.number}`);\n  }\n\n  findMinus() {\n    return document.getElementById(`minus-${this.number}`);\n  }\n\n  calcPrices() {\n    return this.data;\n  }\n}\n\nexport default Plan;\n"]},"metadata":{},"sourceType":"module"}